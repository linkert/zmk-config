#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/* Layers */
#define baseLayer 0
#define symbolLayer 1
#define numpadLayer 2
#define functionLayer 3
#define bluetoothLayer 4
#define gamingLayer 5

/* Shorthand */
#define _ &kp
#define __ &trans
#define ___ &none


/*
Key positions:

00 01 02 03 04 05       06 07 08 09 10 11
12 13 14 15 16 17       18 19 20 21 22 23
24 25 26 27 28 29       30 31 32 33 34 35
36 37 38 39 40 41       42 43 44 45 46 47
48 49 50 51 52 53       54 55 56 57 58 59
                  60 61
*/

/ {
  combos {
    compatible = "zmk,combos";
    combo_btl {
      timeout-ms = <200>;
      key-positions = <60 61>;
      bindings = <&sl bluetoothLayer>;
    };
  };
};

/ {
  behaviors {
    gresc: grave_escape {
      compatible = "zmk,behavior-mod-morph";
      bindings = <&kp ESC>, <&kp GRAVE>;
      mods = <(MOD_LSFT|MOD_RSFT)>;
      keep-mods = <(MOD_RSFT)>;
    };
    hm_l: homerow_mods_left {
      compatible = "zmk,behavior-hold-tap";
      #binding-cells = <2>;
      label = "HOMEROW_MODS_L";
      flavor = "balanced";
      tapping-term-ms = <300>;
      quick-tap-ms = <200>;
      require-prior-idle-ms = <150>;
      hold-trigger-key-positions = <18 19 20 21 22 30 31 32 33 34 42 43 44 45 46>;
      hold-trigger-on-release;
      bindings = <&kp>, <&kp>;
    };
    hm_r: homerow_mods_right {
      compatible = "zmk,behavior-hold-tap";
      #binding-cells = <2>;
      label = "HOMEROW_MODS_R";
      flavor = "balanced";
      tapping-term-ms = <300>;
      quick-tap-ms = <200>;
      require-prior-idle-ms = <150>;
      hold-trigger-key-positions = <13 14 15 16 17 25 26 27 28 29 37 38 39 40 41>;
      hold-trigger-on-release;
      bindings = <&kp>, <&kp>;
    };
  };
};

/ {
  keymap {
    compatible = "zmk,keymap";
    
    default_layer {
      bindings = <
        &gresc  _ N1     _ N2         _ N3         _ N4         _ N5           _ N6    _ N7         _ N8         _ N9             _ N0    _ BKSP
        _ TAB   _ Q      _ W          _ F          _ P          _ B            _ J     _ L          _ U          _ Y              _ RA(W) _ DEL
        _ LSHFT _ A      &hm_l LALT R &hm_l LGUI S &hm_l LCTL T _ G            _ M     &hm_r LCTL N &hm_r RGUI E &hm_r RALT RA(O) _ RA(A) &mt RSHFT ENTER
        _ LCTL  _ Z      _ X          _ C          _ D          _ V            _ K     _ H          _ O          _ I              _ APOS  _ RCTL 
        ___     _ C_MUTE _ C_VOL_DN   _ C_VOL_UP   _ RALT       &mt LGUI SPACE _ SPACE _ LEFT       _ DOWN       _ UP             _ RIGHT ___
        _ FSLH  &mo symbolLayer
      >;
    };

    sym_layer {
      bindings = <
        __     __ __         __         __ __   __      __     __     __      __     __ 
        __     __ __         __         __ __   _ MINUS _ LBKT _ RBKT _ BSLH  __     __ 
        __     __ __         __         __ __   _ SEMI  _ LEFT _ DOWN _ UP   _ RIGHT __
        __     __ __         __         __ __   _ EQUAL _ COMMA _ PERIOD     __      __     __ 
        _ HOME __ _ C_BRI_DN _ C_BRI_UP __ __   __      __     __     __      __     _ PG_UP
        _ FSLH  ___
      >;
    };

    num_layer {
      bindings = <
        __ __ __ __ __ __    __   __   __   __   __ __
        __ __ __ __ __ __    __   _ N7 _ N8 _ N9 __ __
        __ __ __ __ __ __    __   _ N4 _ N5 _ N6 __ __
        __ __ __ __ __ __    _ N0 _ N1 _ N2 _ N3 __ __
        __ __ __ __ __ __    __   __   __   __   __ __
        __ &to baseLayer
      >;
    };

    func_layer {
      bindings = <
        __ __ __ __ __ __    __ _ F10 _ F11 _ F12 __ __
        __ __ __ __ __ __    __ _ F7  _ F8  _ F9  __ __
        __ __ __ __ __ __    __ _ F4  _ F5  _ F6  __ __
        __ __ __ __ __ __    __ _ F1  _ F2  _ F3  __ __
        __ __ __ __ __ __    __ __    __    __    __ __
        __  &to baseLayer
      >;
    };

    bt_layer {
      bindings = <
        ___ &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 ___    ___ ___ ___ ___ ___ ___
        ___ ___          ___          ___          ___          ___    ___ ___ ___ ___ ___ ___
        ___ ___          ___          ___          ___          ___    ___ ___ ___ ___ ___ ___ 
        ___ ___          ___          ___          ___          ___    ___ ___ ___ ___ ___ &bt BT_CLR_ALL
        ___ ___          ___          ___          ___          ___    ___ ___ ___ ___ ___ &bootloader 
        ___  &to baseLayer
      >;
    };
    
    qwerty_layer {
      bindings = <
        &gresc  _ N1     _ N2       _ N3       _ N4   _ N5            _ N6    _ N7   _ N8     _ N9     _ N0    _ BKSP
        _ TAB   _ Q      _ W        _ E        _ R    _ T             _ Y     _ U    _ I      _ O      _ P     _ DEL
        _ LSHFT _ A      _ S        _ D        _ F    _ G             _ APOS  _ H    _ J      _ K      _ L     &mt RSHFT ENTER
        _ LCTL  _ Z      _ X        _ C        _ V    _ B             _ N     _ M    _ COMMA  _ PERIOD  _ FSLH  _ RCTL 
        _ END   _ C_MUTE _ C_VOL_DN _ C_VOL_UP _ LALT &mt LGUI SPACE  _ SPACE _ RALT &to numpadLayer &to functionLayer _ PSCRN _ PG_DN
        _ FSLH  &mo symbolLayer
      >;
    };
 
  };
};
